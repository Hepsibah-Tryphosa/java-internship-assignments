aggregation 

public class Author {
    String name;
    String email;
    String gender;

    Author(String name, String email, String gender) {
        this.name = name;
        this.email = email;
        this.gender = gender;
    }

    public String getName() {
        return name;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getGender() {
        return gender;
    }

    public String toString() {
        return ( "(" + getGender() + ")" + " at " + getEmail());
    }

}
public class Book {
    String name;
    Author author;
    double price;
    int qty;

    Book(String name, Author author, double price, int qty) {
        this.name = name;
        this.author = author;
        this.price = price;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Author getAuthor() {
        return author;
    }

    public void setAuthor(Author author) {
        this.author = author;
    }

    public double getPrice() {
        return price;
    }

    public void setPrice(double price) {
        this.price = price;
    }

    public int getQty() {
        return qty;
    }

    public void setQty(int qty) {
        this.qty = qty;
    }

    public String toString(){
        return getName() +" "+getAuthor();
    }

}


........................................................................................

inheritance and method overloading

public class Circle {
    double radius;
    static String colour;

    Circle(double radius, String colour) {
        this.radius = radius;
        this.colour = colour;
    }

    public double getArea() {
        double area = (radius * radius) * Math.PI;
        return area;
    }

    public String toString() {
        return ("areaofcircle" + getArea());
    }
}
public class Cylinder extends Circle {
    double height;

    public Cylinder(double radius, double height) {
        super(radius, colour);
        this.height = height;
    }

    public double getVolume() {
        double volume = getArea() * height;
        return volume;
    }

    public String toString() {
        return ("volumeofcylinder" + getVolume());

    }

}
public class Main {
    public static void main(String[] args) {
        Circle cr = new Circle(1.2, "red");
        System.out.println(cr);
        Cylinder cy = new Cylinder(1.2, 1.3);
        System.out.println(cy);
    }

}

