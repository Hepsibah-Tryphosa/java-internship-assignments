copy the elements from one array to another

public class Arrays {
     public static void main(String[] args) {
        String [] s=new String[3];
        s[0]="copy";
        s[1]="the";
        s[2]="elements";
    for (int i=0;i<s.length;i++){
        System.out.println(s[i]);
    }
String ss[]=new String[s.length];
for(int i=0;i<ss.length;i++){
     ss[i]= s[i];
     System.out.println(ss[i]);
}
        
    }
    
}

..................................................................................................................

minimum and maimum values in array

public class Arrayminmax {
    public static void main(String[] args) {
        int[] values = { 11, 2, 3, 4, 99 };
        int min = values[0];
        for (int i = 0; i < values.length; i++) {
            if (values[i] < min) {
                min = values[i];
                System.out.println(min);
            }
        }

        int max = values[0];
        for (int i = 0; i < values.length; i++) {
            if (values[i] > max) {
                max = values[i];
                System.out.println(max);

            }
        }

    }
}

.......................................................................................................................

even and odd numbers in array

public class Arrevenodd {
    public static void main(String[] args) {
        int eveodd[] = { 1, 2, 3, 4, 5, 6, 7, 8, 9 };
        System.out.println("even");
        for (int i = 0; i < eveodd.length; i++) {

            if (eveodd[i] % 2 == 0) {
                System.out.println(eveodd[i]);
            }
        }

        System.out.println("odd");
        for (int i = 0; i < eveodd.length; i++) {
            if (eveodd[i] % 2 != 0) {
                System.out.println(eveodd[i]);

            }
        }
    }
}

.....................................................................................................................

duplicate values

public class Duplicate {
    public static void main(String[] args) {

        int numbers[] = { 10, 20, 30, 50, 20, 30 };

        for (int i = 0; i < numbers.length; i++) {

            for (int j = i + 1; j < numbers.length; j++) {

                if (numbers[i] == numbers[j])
                    System.out.println(numbers[j]);
            }

        }

    }

}

.....................................................................................................................
                      
 2 dimentioanl array
 
 public class TwoDimArray {

        int matrix[][] = {
                        { 1, 2, 3, 4 },
                        { 5, 6, 7, 8 },
                        { 9, 1, 2, 3 },
                        { 4, 7, 9, 2 }
        };
      //calcuates sum of a row specified by index
        int addRow(int matrix[][], int rowIndex) {
                int sumOfRows = 0;

                int row[] = matrix[rowIndex];
                for (int i = 0; i < row.length; i++) {
                        sumOfRows = sumOfRows + row[i];

                }
                return sumOfRows;
        }

        public static void main(String[] args) {

                TwoDimArray td = new TwoDimArray();
                for (int i = 0; i < td.matrix.length; i++) {

                        int row = td.addRow(td.matrix, i);
                        System.out.println(row);

                }

                int rowsLength = td.matrix.length;
                int colLength = td.matrix[0].length;
                for (int colIndex = 0; colIndex < colLength; colIndex++) {
                        int sumOfColm = 0;
                        for (int rowIndex = 0; rowIndex < rowsLength; rowIndex++) {
                                sumOfColm = sumOfColm + td.matrix[rowIndex][colIndex];

                        }
                        System.out.println(" " + sumOfColm);
                }

                for (int rowIndex = 0; rowIndex < rowsLength; rowIndex++) {
                        int sumOfColm = 0;
                        for (int colIndex = 0; colIndex < colLength; colIndex++) {
                                sumOfColm = sumOfColm + td.matrix[rowIndex][colIndex];

                        }
                        System.out.print(" " + sumOfColm);
                }

        }
}
